// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace SaveGame
{

using global::System;
using global::FlatBuffers;

public struct Data : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static Data GetRootAsData(ByteBuffer _bb) { return GetRootAsData(_bb, new Data()); }
  public static Data GetRootAsData(ByteBuffer _bb, Data obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool DataBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "Data"); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Data __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int Highscore { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<SaveGame.Data> CreateData(FlatBufferBuilder builder,
      int highscore = 0) {
    builder.StartTable(1);
    Data.AddHighscore(builder, highscore);
    return Data.EndData(builder);
  }

  public static void StartData(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddHighscore(FlatBufferBuilder builder, int highscore) { builder.AddInt(0, highscore, 0); }
  public static Offset<SaveGame.Data> EndData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SaveGame.Data>(o);
  }
  public static void FinishDataBuffer(FlatBufferBuilder builder, Offset<SaveGame.Data> offset) { builder.Finish(offset.Value, "Data"); }
  public static void FinishSizePrefixedDataBuffer(FlatBufferBuilder builder, Offset<SaveGame.Data> offset) { builder.FinishSizePrefixed(offset.Value, "Data"); }
};


}
